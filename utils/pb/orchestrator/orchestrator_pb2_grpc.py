# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import orchestrator_pb2 as orchestrator__pb2


class OrchestratorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AcceptOrderNotApprovedMessage = channel.unary_unary(
                '/orchestrator.OrchestratorService/AcceptOrderNotApprovedMessage',
                request_serializer=orchestrator__pb2.OrderNotApprovedData.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AcceptBookSuggestions = channel.unary_unary(
                '/orchestrator.OrchestratorService/AcceptBookSuggestions',
                request_serializer=orchestrator__pb2.BookSuggestions.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AcceptOrderConfirmation = channel.unary_unary(
                '/orchestrator.OrchestratorService/AcceptOrderConfirmation',
                request_serializer=orchestrator__pb2.OrderConfirmedData.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OrchestratorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AcceptOrderNotApprovedMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptBookSuggestions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptOrderConfirmation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrchestratorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AcceptOrderNotApprovedMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptOrderNotApprovedMessage,
                    request_deserializer=orchestrator__pb2.OrderNotApprovedData.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AcceptBookSuggestions': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptBookSuggestions,
                    request_deserializer=orchestrator__pb2.BookSuggestions.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AcceptOrderConfirmation': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptOrderConfirmation,
                    request_deserializer=orchestrator__pb2.OrderConfirmedData.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'orchestrator.OrchestratorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrchestratorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AcceptOrderNotApprovedMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/orchestrator.OrchestratorService/AcceptOrderNotApprovedMessage',
            orchestrator__pb2.OrderNotApprovedData.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptBookSuggestions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/orchestrator.OrchestratorService/AcceptBookSuggestions',
            orchestrator__pb2.BookSuggestions.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptOrderConfirmation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/orchestrator.OrchestratorService/AcceptOrderConfirmation',
            orchestrator__pb2.OrderConfirmedData.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
